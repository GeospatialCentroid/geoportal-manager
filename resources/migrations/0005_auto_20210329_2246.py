# Generated by Django 3.1.7 on 2021-03-29 20:48

from django.db import migrations
import csv
from django.contrib.gis.geos import fromstr
from pathlib import Path
from django.db import transaction

DATA_FILENAME = 'places.txt'
def load_data(apps, schema_editor):
    Place = apps.get_model('resources', 'Place')

    # access file level one above current

    csvfile = open(Path(__file__).parents[1] / DATA_FILENAME, newline='')
    reader = csv.DictReader(csvfile, delimiter='|', quoting=csv.QUOTE_NONE)

    # name = models.CharField(max_length=100)
    # tate_fp = models.CharField(max_length=100, default='')
    # place_fp = models.CharField(max_length=100, default='')
    # name_lsad = models.CharField(max_length=100, default='')

    for obj in reader:
        try:
            with transaction.atomic():
                Place(name=obj['NAME'], tate_fp=obj['STATEFP'], place_fp=obj['PLACEFP'], name_lsad=obj['NAMELSAD']).save()
        except:
            pass

    csvfile.close()


def reverse_func(apps, schema_editor):
    # forwards_func() creates two Country instances,
    # so reverse_func() should delete them.
    # todo empty the database tables
    print("Reversed!")


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0004_auto_20210329_2243'),
    ]

    operations = [
        migrations.RunPython(load_data,reverse_func)
    ]

            #     pass