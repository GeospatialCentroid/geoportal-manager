# Generated by Django 3.1.7 on 2021-03-29 20:48

from django.db import migrations
import json
from django.contrib.gis.geos import fromstr
from pathlib import Path

DATA_FILENAME = 'category.json'
def load_data(apps, schema_editor):
    Category = apps.get_model('resources', 'Category')

    Category_Keywords = apps.get_model('resources', 'Category_Keywords')
    # access file level one above current
    jsonfile = Path(__file__).parents[1] / DATA_FILENAME
    print(Category)

    with open(str(jsonfile)) as datafile:
        objects = json.load(datafile)
        # we're going to populate the table in 3 steps

        # 1) generate the categories
        for obj in objects:
            Category(name=obj['name'], code = obj['code'],title=obj['title'],desc=obj['desc']).save()

        # 2) generate the keywords
        for obj in objects:

            for k in obj["keywords"]:
                Category_Keywords(name=k).save()

        # 3) generate the category_keywords manytomany
        for obj in objects:
            # get the category
            o_id = Category.objects.get(code=obj['code']).id
            for k in obj["keywords"]:
                k_id=Category_Keywords.objects.get(name=k).id
                Category_Keywords.category.through(category_id=o_id, category_keywords_id=k_id).save()


def reverse_func(apps, schema_editor):
    # forwards_func() creates two Country instances,
    # so reverse_func() should delete them.
    # todo empty the database tables
    print("Reversed!")


class Migration(migrations.Migration):

    dependencies = [
        ('resources', '0002_auto_20210329_1956'),
    ]

    operations = [
        migrations.RunPython(load_data,reverse_func)
    ]

            #     pass